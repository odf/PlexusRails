- hidden = dataset.hidden ? ' hidden' : ''
- hideable = hideable ? ' hideable' : ''
- level = 0 unless defined?(level) and level
- graph = dataset.project.graph unless defined?(graph) and graph
- pred = "x#{graph.pred(dataset.id).to_a.join('x')}x"
- succ = "x#{graph.succ(dataset.id).to_a.join('x')}x"

%div{ :id => "x#{dataset.id}x", :class => "data-set#{hideable}", |
      :'data-pred' => pred, :'data-succ' => succ } |
  %a{ :href => data_node_url(dataset) }
    %div{ :class => "data-set-header #{dataset.status}#{hidden}", |
          :style => "margin-left: #{level * 8}pt" } |
      &nbsp;
      %dfn= (dataset.data_type || "").underscore.humanize.titleize
      == (#{h(dataset.last_suffix)})
      &nbsp;
      - if dataset.images.empty?
        &mdash;
      - else
        %img{:src => "/images/grains-tiny.png", :alt => ""}
      &nbsp;
      = format_time(dataset.date, :mode => :terse)
      - if dataset.filename
        &nbsp; &bull;
      .clear
      .data-set-popup
        - pic = dataset.images.first
        - if pic
          %img{ :src => url_for([dataset, pic]), :alt => "", |
                :width => 80, :height => 80 } |
        .blurb
          = dataset.suffix
          - if dataset.status == 'error'
            %em (rejected)
          %br
          %dfn Sample:
          = dataset.sample.name
          %br
          %dfn Process:
          = (dataset.producer.data_type || "").underscore.humanize
          %br
          %dfn Time:
          = format_time(dataset.date, :mode => :sortable, :zone => true)
          %br
          - unless dataset.producer.run_by.blank?
            %dfn Operator:
            = dataset.producer.run_by
            %br
      .clear
