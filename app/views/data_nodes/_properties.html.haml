- time_options = { :mode => :sortable, :zone => true }
- filename = @data_node.filename
- process_node = @data_node.producer

.properties
  %ul
    %li
      %dfn Full Name
      = breakable(@data_node.name || "")
    %li
      %dfn Mango ID
      = breakable(@data_node.identifier || "")
    %li
      %dfn Data Type
      = (@data_node.data_type || "").underscore.humanize
    %li
      %dfn Process Type
      = (process_node.data_type || "").underscore.humanize
    %br/
    %li
      %dfn Data created
      = format_time(@data_node.date, time_options)
    - unless process_node.run_by.blank?
      %li
        %dfn Operator
        = process_node.run_by
    %li
      %dfn Data stored
      - if filename.blank?
        no
      - elsif @data_node.synchronized_at.blank?
        at unknown time
      - else
        = format_time(@data_node.synchronized_at, time_options)
    - if @data_node.fingerprint
      %li
        %dfn Fingerprint
        = @data_node.fingerprint
    - unless filename.blank? or filename == @data_node.name
      %li
        %dfn File name
        = filename

    - if @data_node.has_domain_info
      %br/
      %li
        %dfn Origin
        - x = @data_node.domain_origin_x
        - y = @data_node.domain_origin_y
        - z = @data_node.domain_origin_z
        == (#{x}, #{y}, #{z})
      %li
        %dfn Size
        - x = @data_node.domain_size_x
        - y = @data_node.domain_size_y
        - z = @data_node.domain_size_z
        == #{x} &times; #{y} &times; #{z}
      %li
        - unit = h(@data_node.voxel_unit).sub(/\Amicron\Z/, "&micro;").html_safe
        %dfn== Voxel size (#{unit})
        - x = "%.2f" % @data_node.voxel_size_x
        - y = "%.2f" % @data_node.voxel_size_y
        - z = "%.2f" % @data_node.voxel_size_z
        == #{x} &times; #{y} &times; #{z}
